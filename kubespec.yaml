apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dapp
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: dapp
    spec:
      containers:
      - image: wdowny/trltest
        name: dapp
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: dapp
spec:
  selector:
    name: dapp
  ports:
  - name: "8080"
    port: 8080
    nodePort: 30080
    targetPort: 8080
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prom-config
data:
  prometheus.yml: |
    global:
      scrape_interval:     10s
      evaluation_interval: 10m
    scrape_configs:
    #  - job_name: 'prometheus'
    #    static_configs:
    #      - targets: ['localhost:9090']
      - job_name: 'application'
        static_configs:
          - targets: ['dapp:8080']
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dprom
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: dprom
    spec:
      containers:
      - args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus
        - --web.console.libraries=/usr/share/prometheus/console_libraries
        - --web.console.templates=/usr/share/prometheus/consoles
        image: prom/prometheus:v2.1.0
        name: dprom
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: etc-prometheus
          mountPath: /etc/prometheus/
      restartPolicy: Always
      volumes:
      - name: etc-prometheus
        configMap:
          name: prom-config
          items:
          - key: prometheus.yml
            path: prometheus.yml
---
apiVersion: v1
kind: Service
metadata:
  name: dprom
spec:
  selector:
    name: dprom
  ports:
  - name: "9090"
    port: 9090
    nodePort: 30090
    targetPort: 9090
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: graf-config
data:
  GF_SECURITY_ADMIN_PASSWORD: admin
  datasource.yml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://dprom:9090
  dashboard.yml: |
    apiVersion: 1
    providers:
    - name: 'Prometheus'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      editable: true
      options:
        path: /etc/grafana/provisioning/dashboards
  trl.json: |
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "links": [],
      "panels": [
        {
          "aliasColors": {},
          "bars": true,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "fill": 1,
          "gridPos": {
            "h": 9,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 2,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "rate(http_requests[1m])*60",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "HTTP requests count",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "refresh": false,
      "schemaVersion": 18,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-1h",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "5s",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "",
      "title": "TR Logic App dashboard",
      "uid": "np-JUJ7Zz",
      "version": 1
    }
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dgraf
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: dgraf
    spec:
      containers:
      - env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: GF_SECURITY_ADMIN_PASSWORD
              name: graf-config
        image: grafana/grafana
        name: dgraf
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: graf-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: graf-dashboards
          mountPath: /etc/grafana/provisioning/dashboards
      restartPolicy: Always
      volumes:
      - name: graf-datasources
        configMap:
          name: graf-config
          items:
          - key: datasource.yml
            path: datasource.yml
      - name: graf-dashboards
        configMap:
          name: graf-config
          items:
          - key: dashboard.yml
            path: dashboard.yml
          - key: trl.json
            path: trl.json
---
apiVersion: v1
kind: Service
metadata:
  name: dgraf
spec:
  selector:
    name: dgraf
  ports:
  - name: "3000"
    port: 3000
    nodePort: 30030
    targetPort: 3000
  type: NodePort